创建表：
员工表
create table EMP
(
  empno    NUMBER(4) not null,
  ename    VARCHAR2(10),
  dutyno   NUMBER(2),
  mgr      NUMBER(4),
  hiredate DATE,
  sal      NUMBER(7,2),
  comm     NUMBER(7,2),
  deptno   NUMBER(2),
  pic      VARCHAR2(50)
)
设置主键：
alter table EMP
  add constraint PK_EMP primary key (EMPNO)
部门表：
create table DEPT
(
  deptno NUMBER(2) not null,
  dname  VARCHAR2(14),
  loc    VARCHAR2(13),
  isopen NUMBER(1) default 1
)
设置主键： 
  alter table DEPT
  add constraint PK_DEPT primary key (DEPTNO)
职位表：
create table DUTY
(
  dutyno   NUMBER(2) not null,
  dutyname VARCHAR2(15)
)
设置主键：
alter table DUTY
  add constraint DUTYNO primary key (DUTYNO)
  
设置外键：
alter table EMP
  add constraint FK_DEPTNO foreign key (DEPTNO)
  references DEPT (DEPTNO);
alter table EMP
  add constraint FK_DUTYNO foreign key (DUTYNO)
  references DUTY (DUTYNO);
自增设定：
定义序列：
create sequence EMPNO_SEQ
minvalue 1
maxvalue 9999
start with 41
increment by 1
cache 20;
create sequence DEPTNO_SEQ
minvalue 1
maxvalue 99
start with 21
increment by 1
cache 20;
create sequence DUTYNO_SEQ
minvalue 1
maxvalue 99
start with 21
increment by 1
cache 20;
触发器：
create or replace trigger EMP_TRIGGER
  before insert on emp  
  for each row 
when (new.empno is null)
begin
    select empno_seq.nextval into:NEW.empno from dual;
  end;
  
 create or replace trigger DEPT_TRIGGER
  before insert on DEPT  
  for each row 
when (new.DEPTNO is null)
begin
    select deptno_seq.nextval into:NEW.DEPTNO from dual;
  end;
  
create or replace trigger DUTY_TRIGGER
  before insert on DUTY  
  for each row 
when (new.DUTYNO is null)
begin
    select DUTYNO_seq.nextval into:NEW.DUTYNO from dual;
  end;
  
创建MAVEN工程：
create a simple project 勾选
packaging 类型 war

增加webapp 及 web.xml:  工程-右键-Java EE Tools-Generate Deployement Discriber Stub
ECLISPE 常用快捷键：alt+/ 快速提示  ctrl+shift+t 查找  ctrl+o 查看类结构 alt+e 快速切换文档 alt+shift+s 快速右键菜单添加构造函数等ctrl+1 快速生成变量


导包：pom.xml文件  
alt+/   <dependencies>
百度：mvn
查找：spring-webmvc  spring-jdbc spring-aspects spring-test mybatis mybatis-spring jstl servlet-api
c3p0 pagehelper jackson-databind junit guava (mysql)
<dependency>
    <groupId>com.oracle</groupId>
    <artifactId>ojdbc6</artifactId>
    <version>11.2.0.3</version>
</dependency>
alt+F5 更新工程

添加package和文件
/src/main/java  右键-New -package:
com.xxx.bean(entity)
com.xxx.dao
com.xxx.controller
com.xxx.service
com.xxx.utils
com.xxx.test
/src/main/resources 右键-New-package:
mapper
/src/main/resources 右键-New-spring bean configuration file:
applicationContext.xml(spring.xml)
springmvc.xml(或在/WEB-INF/下(和web.xml同级)新建 [dispacherServlet-name]-servlet.xml)
db.properties
mybatis.xml
generaterconfig.xml自动生成mapper文件和实体类


配置web.xml 
alt+/ #contextLoaderListener   classpath:applicationContext.xml(spring.xml)
alt+/ #dispacherservlet classpath:springmvc.xml(或不设置在/WEB-INF/下新建 [dispacherServlet-name]-servlet.xml) mapping:/ 
alt+/ filter (ctrl+shift+t:CharacterEncodingFilter)  filter-mapping :/*
alt+/  filter filter-class:HiddenHttpMethodFilter  filter-mapping:/*

配置springmvc.xml  路由和试图部分：扫描 视图路径 restful 默认处理
<context:component-scan base-package="com.ssmtt" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<mvc:annotation-driven></mvc:annotation-driven>
	<mvc:default-servlet-handler/>

配置数据源：
jdbcUrl=jdbc:oracle:thin:@10.10.34.33:1521:torcl
jdbcDriver=oracle.jdbc.driver.OracleDriver
  jdbc:mysql://127.0.0.1:3306/student_db(?useUnicode=true&characterEncoding=UTF-8)    com.mysql.jdbc.Driver
  jdbc:microsoft:sqlserver://HOST:1433;DatabaseName=DATABASE   com.microsoft.jdbc.sqlserver.SQLServerDriver
  jdbc:postgresql://HOST/DATABASE   org.postgresql.Driver 
user=root
password=111111

配置 spring.xml(applicationContext.xml):
 扫描(component-scan) 
 数据源(property-placeholder combopooleddatasource)  
 mybatis:(sqlsessionFactoryBean(dataSource configLocation(mybatis.xml) mapperLocations(mapper/*.xml)) mapperscannerconfigurer(base-package com.xxx.dao)
 事务管理器：DataSourceTransactionManager(dataSource)
 切面aop
 事务tx
<context:component-scan base-package="com.ssmtt">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<context:property-placeholder location="classpath:db.properties"/>
	
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="driverClass" value="${jdbcDriver}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
	
	</bean>
	<bean class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="pooledDataSource"></property>
		<property name="configLocation" value="classpath:mybatis.xml"></property>
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ssmtt.dao"></property>
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="SIMPLE/BATCH"></constructor-arg>
	</bean>	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
		
	<aop:config>
		<aop:pointcut expression="execution(* com.ssmtt.service.*.*(..))" id="txPointcut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	</aop:config>	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*"/>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="select*" read-only="true"/>
			<tx:method name="query*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>			
		</tx:attributes>	
	</tx:advice>
	
mybatis.xml:
	<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<setting name="mapUnderscoreToCamelCase" value="true"/>
		<setting name="defaultExecutorType" value="SIMPLE"/> value=BATCH 批量
	</settings>
<typeAliases>
	<package name="com.ssmtt.po"/>
</typeAliases>
<plugins>
	<plugin interceptor="com.github.pagehelper.PageInterceptor">
	<property name="reasonable" value="true"/>
	</plugin>
</plugins>
</configuration>

generaterconfig.xml 右键-new-
<generatorConfiguration>	
	<properties resource="db.properties"/>	
  <context id="context1">
  	<commentGenerator>
  		<property name="suppressAllComments" value="true"/> 去除注释
  	</commentGenerator>  	
    <jdbcConnection connectionURL="${jdbcUrl}" driverClass="${jdbcDriver}" password="${password}" userId="${user}" />
    <javaModelGenerator targetPackage="com.ssmtt.po" targetProject="ssmt1/src/main/java" /> 实体包
    <sqlMapGenerator targetPackage="mapper" targetProject="ssmt1/src/main/resources" /> xml包
    <javaClientGenerator targetPackage="com.ssmtt.dao" targetProject="ssmt1/src/main/java" type="XMLMAPPER" /> dao包
    <table schema="${user}" tableName="dept" domainObjectName="Dept"></table>
    <table schema="${user}" tableName="duty" domainObjectName="Duty"></table>
    <table schema="${user}" tableName="emp" domainObjectName="Emp" ></table>
    <table schema="${user}" tableName="salgrade" domainObjectName="SaleGrade"></table>
  </context>
</generatorConfiguration>

第一种：
日期处理第一种方式：写入时：insert update 都要 to_date转换一下；读取时：to_char(e.HIREDATE,'yyyy-MM-dd') HIREDATE
日期处理第二种方式：
   @DateTimeFormat(pattern="yyyy-MM-dd")
    @JsonFormat(pattern="yyyy-MM-dd",timezone="GMT+8")
    private Date hiredate;
实体类
public class Emp {
    private Short empno;
    private String ename;
    private Duty duty;
    private Emp empg;
    private String hiredate;
    private BigDecimal sal;
    private BigDecimal comm;
    private Dept dept;
    private String pic;
EmpMapper.xml
<resultMap id="BaseResultMap" type="com.ssmtt.po.Emp">
    <id column="EMPNO" jdbcType="DECIMAL" property="empno" />
    <result column="ENAME" jdbcType="VARCHAR" property="ename" />   
    <result column="HIREDATE" jdbcType="VARCHAR" property="hiredate" />
    <result column="SAL" jdbcType="DECIMAL" property="sal" />
    <result column="COMM" jdbcType="DECIMAL" property="comm" />
    <result column="PIC" jdbcType="VARCHAR" property="pic" />
    <association property="duty" javaType="com.ssmtt.po.Duty">
    <id column="dutyno" property="dutyno"/>
    <result column="dutyname" property="dutyname"/>
    </association>
     <association property="empg" javaType="com.ssmtt.po.Emp">
     	<id column="mgr" property="empno"/>
     	<result column="mgrname" property="ename"/>
     </association>
    <association property="dept" javaType="com.ssmtt.po.Dept">    
    	<id column="deptno" property="deptno"/>
    	<result column="dname" property="dname"/>    	
    </association>    
  </resultMap>
  <sql id="Base_Column_List">
    e.EMPNO, e.ENAME, dt.dutyno,dt.dutyname,e2.empno mgr ,e2.ENAME mgrname, to_char(e.HIREDATE,'yyyy-MM-dd') HIREDATE, e.SAL, e.COMM, d.deptno,d.dname, e.PIC
  </sql>
  <select id="selectByExample" parameterType="com.ssmtt.po.EmpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ROOT.EMP e left join root.dept d on e.deptno=d.deptno 
    				left join root.duty dt on e.dutyno=dt.dutyno 
    				left join root.emp e2 on e.mgr=e2.empno  
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>  
  <insert id="insert" parameterType="com.ssmtt.po.Emp">
    insert into ROOT.EMP (EMPNO, ENAME, DUTYNO, 
      MGR, HIREDATE, SAL, 
      COMM, DEPTNO, PIC)
    values (#{empno,jdbcType=DECIMAL}, #{ename,jdbcType=VARCHAR}, #{duty.dutyno,jdbcType=DECIMAL}, 
      #{empg.empno,jdbcType=DECIMAL}, to_date(#{hiredate,jdbcType=VARCHAR},'yyyy-MM-dd'), #{sal,jdbcType=DECIMAL}, 
      #{comm,jdbcType=DECIMAL}, #{dept.deptno,jdbcType=DECIMAL}, #{pic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssmtt.po.Emp">
    insert into ROOT.EMP
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empno != null">
        EMPNO,
      </if>
     ...
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
     ...
      <if test="hiredate != null">
        to_date(#{hiredate,jdbcType=VARCHAR},'yyyy-MM-dd'),
      </if>
     ...
    </trim>
  </insert>
  处理EMP.JAVA引用的dept和duty类  EmpExample.java：用自动生成的条件查询类时，因为实体类Emp对应e，所以要指明e即e里面的dutyno和deptno,而不是dt,d
  public Criteria andDutynoIsNull() {
            addCriterion("e.DUTYNO is null");
            return (Criteria) this;
        }
		...
   public Criteria andDeptnoIsNull() {
            addCriterion("e.DEPTNO is null");
            return (Criteria) this;
        }
		...
		
测试mybatis
测试前，建立工具类 随机类：
public class RandomUtil {
	private static String[] genders = { "M", "F" };
	private static Random ran = new Random();
	public static int randInt(int from, int to) {
		return ran.nextInt(to - from + 1) + from;
	}
	public static String randGender() {
		return genders[ran.nextInt(genders.length)];
	}
	public static String randString() {
		return UUID.randomUUID().toString().substring(0, randInt(3, 8));
	}
}
测试类：
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:spring.xml" })
public class MybatisTest {
	@Resource
	DeptMapper deptMapper;
	@Resource
	EmpMapper empMapper;
	@Resource
	SqlSession sqlSession; //批量插入用 需要spring.xml mybatis.xml配置BATCH
	@Test
	public void test() {
		// empMapper.insertSelective(new Emp(null, "张小三", "M", "zhangxs@sina.com",
		// RandomUtil.randInt(1, 5)));
		/*
		 * EmpMapper mapper = sqlSession.getMapper(EmpMapper.class); for (int i = 0; i <
		 * 1500; i++) { mapper.insert(new Emp(null, RandomUtil.randString(),
		 * RandomUtil.randGender(), RandomUtil.randString() + "@qq.com",
		 * RandomUtil.randInt(1, 5))); } List<Emp> list =
		 * empMapper.selectByExample(null); System.out.println(list.size())
		 */;
		int i = empMapper.insertSelective(new Emp(null, "李k白", "M", "xjxy@qq.com", 4));
		System.out.println(i);
	}
对应第一种：
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations= {"classpath:spring.xml"})
public class MapperTest {
	@Resource
	EmpMapper empMapper;
	@Resource
	EmpService empService;
	@Test
	public void test() {
		EmpExample example=new EmpExample();
		//Emp(Short empno, String ename, Duty duty, Emp empg, String hiredate, BigDecimal sal, BigDecimal comm,Dept dept, String pic)
		Emp emp2 = new Emp(null,"小丽",new Duty((short) 1),empService.findDeptMgr(30),"2014-02-03",new BigDecimal(2000),
				new BigDecimal(200),new Dept((short)30),null);
		empMapper.insert(emp2);
		List<Emp> list = empMapper.selectByExample(null);
		for(Emp emp:list) {
			System.out.println(emp);
		}
	}
}

在实体包com.xxx.pojo(entity,bean,po)添加ajax信息类：
public class Msg {
	private boolean status;
	private String message;
	private Map<String,Object> extend=new HashMap<String,Object>();
	public static Msg success() {
		Msg msg = new Msg();
		msg.setStatus(true);
		msg.setMessage("success");
		// TODO Auto-generated method stub
		return msg;
	}
	public static Msg fail() {
		Msg msg = new Msg();
		msg.setStatus(false);
		msg.setMessage("failed");
		// TODO Auto-generated method stub
		return msg;
	}
	public Msg add(String key,Object value) {
		this.getExtend().put(key, value);
		return this;
	}
	public boolean isStatus() {
		return status;
	}
	public void setStatus(boolean status) {
		this.status = status;
	}
	...
}

controller类：
@Controller
public class EmpController {
	@Resource
	EmpService empService;
	@ResponseBody
	@RequestMapping("emp")
	public Msg getAllEmp(@RequestParam(value="pn",defaultValue="1") Integer pn) {
		
		PageHelper.startPage(pn, 5);
		 List<Emp> allEmps = empService.getAllEmps();
		PageInfo pageInfo=new PageInfo(allEmps,3);
		return Msg.success().add("pi",pageInfo);
	}
	@RequestMapping("emp1")
	public String getAllEmp1(@RequestParam(value="pn",defaultValue="1") Integer pn,Model model) {
		
		PageHelper.startPage(pn, 5);
		List<Emp> allEmps = empService.getAllEmps();
		PageInfo pageInfo=new PageInfo(allEmps,3);
		model.addAttribute("pi", pageInfo);
		return "emp/list";
	}
}

视图：
第一种：
<%
	String basepath = request.getContextPath();
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link rel="stylesheet"
	href="<%=basepath%>/static/bootstrap-3.3.7-dist/css/bootstrap.min.css">
<script type="text/javascript"
	src="<%=basepath%>/static/js/jquery-3.3.1.min.js"></script>
<script type="text/javascript"
	src="<%=basepath%>/static/bootstrap-3.3.7-dist/js/bootstrap.min.js"></script>
<style type="text/css">
.pagination {
	margin-top: 5px;
}

<script type="text/javascript">
	$(function(){
		to_page(1);
	});
	function to_page(pn){
		$.ajax({
			url:"<%=basepath%>/emp",
					data : "pn=" + pn,
					type : "GET",
					success : function(result) {
						build_table(result);
						display_pagesinfo(result);
						build_pagenav(result);
					}
				});
			}
			function display_pagesinfo(result) {
				var pageinfo = result.extend.pi;
				$("#pagesinfo").empty();
				$("#pagesinfo").append(
						"共" + pageinfo.pages + "页，共" + pageinfo.total + "条数据")
			}
			function build_pagenav(result) {
				var pageinfo = result.extend.pi;
				$("#pageNav").empty();

				var firstPgLi = $("<li></li>").append(
						$("<a></a>").attr("href", "#").append("首页"));
				var prevPgLi = $("<li></li>").append(
						$("<a></a>").attr("href", "#").append("上页"));
				var nextPgLi = $("<li></li>").append(
						$("<a></a>").attr("href", "#").append("下页"));
				var lastPgLi = $("<li></li>").append(
						$("<a></a>").attr("href", "#").append("末页"));
				if (pageinfo.pageNum == 1) {
					firstPgLi.addClass("disabled");
					prevPgLi.addClass("disabled");
				} else {
					firstPgLi.click(function() {
						to_page(1);
					});
					prevPgLi.click(function() {
						to_page(pageinfo.pageNum - 1);
					});
				}
				if (pageinfo.pageNum == pageinfo.pages) {
					lastPgLi.addClass("disabled");
					nextPgLi.addClass("disabled");
				} else {
					lastPgLi.click(function() {
						to_page(pageinfo.pages);
					});
					nextPgLi.click(function() {
						to_page(pageinfo.pageNum + 1);
					});
				}
				var ul = $("<ul></ul>").addClass("pagination");
				ul.append(firstPgLi).append(prevPgLi);
				$.each(pageinfo.navigatepageNums, function(index, item) {
					var pLi = $("<li></li>").append(
							$("<a></a>").attr("href", "#").append(item));
					if (pageinfo.pageNum == item) {
						pLi.addClass("active");
					}
					pLi.click(function() {
						to_page(item);
					});

					ul.append(pLi);
				});
				ul.append(nextPgLi).append(lastPgLi);
				ul.appendTo($("#pageNav"));
			}
			function build_table(result) {
				/*<th>编号</th><th>姓名</th><th>部门</th>
								<th>职务</th><th>薪金</th><th>上级</th>
								<th>将金</th><th>入职时间</th>
								<th>操作</th>  */
				var emps = result.extend.pi;
				$("#empstable tbody").empty();
				$.each(emps.list,
						function(index, item) {
							var addBtn = $("<button></button>").addClass(
									"btn btn-primary xs").append(
									$("<span></span>").addClass(
											"glyphicon glyphicon-pencil"))
									.append("修改");
							var delBtn = $("<button></button>").addClass(
									"btn btn-danger xs").append(
									$("<span></span>").addClass(
											"glyphicon glyphicon-trash"))
									.append("删除");
							$("<tr></tr>").append(
									$("<td></td>").append(item.empno)).append(
									$("<td></td>").append(item.ename)).append(
									$("<td></td>").append(item.dept.dname))
									.append(
											$("<td></td>").append(
													item.duty.dutyname))
									.append($("<td></td>").append(item.sal))
									.append(
											$("<td></td>").append(
													item.empg == null ? "未指定"
															: item.empg.ename))
									.append($("<td></td>").append(item.comm))
									.append(
											$("<td></td>")
													.append(item.hiredate))
									.append(
											$("<td></td>").append(addBtn)
													.append(delBtn)).appendTo(
											$("#empstable tbody"));
						});

			}
		</script>

  第二种：非ajax方式 带有bootstrapvalidator验证：
  list.jsp:
  <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%
	pageContext.setAttribute("app_path", request.getContextPath());
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link rel="stylesheet" href="${app_path}/static/bs-vd-dp-src/css/bootstrap.css" />
<link rel="stylesheet" href="${app_path}/static/bs-vd-dp-src/css/bootstrapValidator.css" />
<script src="${app_path}/static/bs-vd-dp-src/js/jquery-3.3.1.js"></script>
<script src="${app_path}/static/bs-vd-dp-src/js/bootstrap.js"></script>
<script src="${app_path}/static/bs-vd-dp-src/js/bootstrapValidator.js"></script>
</head>
<body>
	<div class="container">
		<div class="page-header">
			<h2>分页查询</h2>
		</div>
		<div class="row">
			<div class="col-lg-3 col-lg-offset-9">
				<a class="btn btn-primary" id="addEmp" href="emp?pn=${pageinfo.total }">
					<span class="glyphicon glyphicon-plus"></span>添加
				</a>
				<button class="btn btn-primary" id="delEmps">
					<span class="glyphicon glyphicon-trash"></span>删除
				</button>
			</div>
		</div>
		<div class="row">
			<table class="table table-bordered table-hover">
				<thead>
					<tr>
						<th>编号</th>
						<th>姓名</th>
						<th>性别</th>
						<th>邮箱</th>
						<th>部门</th>
						<th>操作</th>
					</tr>
				</thead>
				<tbody>
					<c:forEach items="${pageinfo.list }" var="emp">
						<tr></tr>
						<td>${emp.empId }</td>
						<td>${emp.empName }</td>
						<td>${emp.gender=="M"?"男":"女" }</td>
						<td>${emp.email }</td>
						<td>${emp.dept.deptName }</td>
						<td>
							<button class="btn btn-xs btn-primary" id="editbtn">
								<span class="glyphicon glyphicon-pencil"></span>编辑
							</button>
							<a class="btn btn-xs btn-danger" id="editbtn" href="delemps?empid=${emp.empId }&pn=${pageinfo.pageNum }">
								<span class="glyphicon glyphicon-minus"></span>删除
							</a>
						</td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</div>
		<div class="row">
		<div class="col-lg-5">当前页数${pageinfo.pageNum },总记录数${pageinfo.total }，总页数${pageinfo.pages }</div>
		<div class="col-lg-7">
		<ul class="pagination" style="margin-top:0px;">
			<li><a href="emps?pn=1">首页</a></li>
			<li><a href="emps?pn=${pageinfo.pageNum-1 }">上页</a></li>
			<c:forEach items="${pageinfo.navigatepageNums }" var="page">
			<c:if test="${page==pageinfo.pageNum }">
			<li class="active"><a href="emps?pn=${page }">${page }</a></li>
			</c:if>
			<c:if test="${page!=pageinfo.pageNum }">
			<li><a href="emps?pn=${page }">${page }</a></li>
			</c:if>
			
			
			</c:forEach>
			<li><a href="emps?pn=${pageinfo.pageNum+1 }">下页</a></li>
			<li><a href="emps?pn=${pageinfo.pages }">末页</a></li>
		</ul>
		
		</div>
		</div>
	</div>
</body>
</html>
addemp.jsp:
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%
	pageContext.setAttribute("app_path", request.getContextPath());
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<link rel="stylesheet" href="${app_path}/static/bs-vd-dp-src/css/bootstrap.css" />
<link rel="stylesheet" href="${app_path}/static/bs-vd-dp-src/css/bootstrapValidator.css" />
<script src="${app_path}/static/bs-vd-dp-src/js/jquery-3.3.1.js"></script>
<script src="${app_path}/static/bs-vd-dp-src/js/bootstrap.js"></script>
<script src="${app_path}/static/bs-vd-dp-src/js/bootstrapValidator.js"></script>
</head>
<body>
	<div class="container">
		<div class="page-header">
			<h1>添加员工</h1>
		</div>
		<div class="row">
			<div class="col-lg-8 col-lg-offset-2">
				<form action="${app_path}/emp" method="post" class="form-horizontal" id="addempForm">
					<div class="form-group">
						<lable class="col-lg-3">姓名</lable>
						<div class="col-lg-5">
							<input type="text" class="form-control" name="empName" />
						</div>
					</div>
					<div class="form-group">
						<lable class="col-lg-3">性别</lable>
						<div class="radio">
							<label for=""><input type="radio" name="gender"  value="M" />男 </label>
							<label for=""><input type="radio"	name="gender"  value="F"/>女</label>
						</div>
					</div>
					<div class="form-group">
						<lable class="col-lg-3">邮箱</lable>
						<div class="col-lg-5">
							<input type="text" class="form-control" name="email" />
						</div>
					</div>
					<div class="form-group">
						<lable class="col-lg-3">部门</lable>
						<div class="col-lg-5">
							<select name="deptId" id="" class="form-control">
								<option value="0">请选择</option>
								<c:forEach items="${depts }" var="dept">
									<option value="${dept.deptId}">${dept.deptName }</option>
								</c:forEach>
							</select>
						</div>
					</div>
					<div class="col-lg-3 col-lg-offset-3">
						<input type="hidden" name="pn" value="${pn }" /> <input type="submit" class="form-control" value="提交" />
					</div>
				</form>
			</div>
		</div>
	</div>
	<script type="text/javascript">
	$(function(){
		$('#addempForm').bootstrapValidator({
			message:'无效值',
			feedbackIcons:{
				valid:'glyphicon glyphicon-ok',
				invalid:'glyphicon glyphicon-remove',
				validating:'glyphicon glyphicon-refresh'
			},
			fields:{
				empName:{
					validators:{
						notEmpty:{
							message:'不能为空'
						},
						stringLength:{
							min:3,
							max:15,
							message:'名字在3到15位之间'
						},
						regexp:{
							regexp:/^[\u4E00-\u9FA5A-Za-z0-9_]+$/,
							message:'中文、英文、数字包括下划线'
						},
						remote:{
							url:'${app_path}/checkuser',
							type:'GET',
							message:'用户名已存在'
						}
					}
				},
				gender:{
					validators:{
						notEmpty:{
							message:'不能为空'
						}
					}
				},
				email:{
					validators:{
						notEmpty:{
							message:'不能为空'
						},
						emailAddress:{
							message:'邮箱格式不正确'
						}
					}
				}
			}
		});
	});	
	
	</script>
</body>
</html>

第三种：
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">

<title>Insert title here</title>
<link rel="stylesheet" href="./static/bs-vd-dp-src/css/bootstrap.css" />
<link rel="stylesheet"
	href="./static/bs-vd-dp-src/css/bootstrap-datetimepicker.css" />

<script src="./static/bs-vd-dp-src/js/jquery-3.3.1.js"></script>
<script src="./static/bs-vd-dp-src/js/bootstrap.js"></script>
<script src="./static/bs-vd-dp-src/js/bootstrap-datetimepicker.js"></script>
</head>
<body>
	<div class="container">
		<div class="jumbotron">
			<h1>分页查询</h1>
		</div>
		<div class="row">
			<div class="pull-right">
				<a href="index">list</a> <a href="emps">emps</a>

				<button class="btn btn-primary" id="btnAdd" >Add</button>

				<button class="btn btn-danger" id="btnDelMany">
					<span class="glyphicon glyphicon-trash"></span>Del
				</button>
			</div>
		</div>
		<div class="row">
			<table class="table table-bordered table-hover table-condensed">
				<thead>
					<tr>
						<th>编号</th>
						<th>姓名</th>
						<th>部门</th>
						<th>上级</th>
						<th>职位</th>
						<th>入职时间</th>
						<th>薪资</th>
						<th>操作</th>
					</tr>
				</thead>
				<tbody class="empdata">

				</tbody>
			</table>
		</div>
		<div class="row">
			<div class="col-lg-6">
				<p id="pageinfo"></p>
			</div>
			<div class="col-lg-6" id="pageNav"></div>
		</div>
	</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal"
							aria-hidden="true">&times;</button>
						<h4 class="modal-title" id="myModalLabel">添加员工</h4>
					</div>
					<div class="modal-body">
						<form action="" class="form-horizontal" method="post">
							<div class="form-group">
								<label for="ename" class="control-label col-lg-3">ename</label>
								<div class="col-lg-7">
									<input type="text" class="form-control" name="ename"
										placeholder="ename" />
								</div>
							</div>
							<div class="form-group">
								<label for="deptno" class="control-label col-lg-3">deptno</label>
								<div class="col-lg-7">
									<select class="form-control" name="deptno" id="deptno">
										<option value="0">请选择</option>
									</select>
								</div>
							</div>
							<div class="form-group">
								<label for="mgr" class="control-label col-lg-3">mgr</label>
								<div class="col-lg-7">
									<div class="input-group">
									<input type="text" class="form-control" name="mgr" readonly
										placeholder="上级" />
									<span class="input-group-addon mgrname"></span>
									</div>
								</div>
							</div>
							<div class="form-group">
								<label for="dutyno" class="control-label col-lg-3">dutyno</label>
								<div class="col-lg-7">
									<select name="dutyno" id="dutyno" class="form-control">
										<option value="0">请选择</option>
									</select>
								</div>
							</div>
							<div class="form-group">
								<label  class="col-lg-3 control-label">FIREDATE</label>
								<div class="date form_datetime col-lg-7">									
										<input class="form-control" name="hiredate" id="hiredate" type="text" value=""
										readonly>
								</div>							
							</div>
							

							<div class="form-group">
								<label for="sal" class="control-label col-lg-3">sal</label>
								<div class="col-lg-7">
									<input type="text" class="form-control" name="sal"
										placeholder="salary" />
								</div>
							</div>
						</form>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-default" data-dismiss="modal">关闭</button>
						<button type="button" class="btn btn-primary" id="btnEmpSave">提交更改</button>
					</div>
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal -->
		</div>


	<script src="./script/index.js"></script>
</body>
</html>
index.js:
/**
 * 注意日期控件用法
 */
 var recordNum=0;
var editflag=false;

$.fn.datetimepicker.dates['zh-CN'] = {
		days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期日"],
		daysShort: ["周日", "周一", "周二", "周三", "周四", "周五", "周六", "周日"],
		daysMin:  ["日", "一", "二", "三", "四", "五", "六", "日"],
		months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
		monthsShort: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
		today: "今天",
		suffix: [],
		meridiem: ["上午", "下午"]
};
$('#hiredate').datetimepicker({
	format:'yyyy-mm-dd',
	language: "zh-CN",
	//pickerPosition: "bottom-right",
	minView: 2,
	todayBtn: 1,
	todayHighlight: 1,
	autoclose: 1
});
$(function(){
	
	toPage(1);	
	
});

function toPage(pn){
	$.get("emps", 
			{pn:pn}, 
			function(data) {
		var pinfo=data.extend.pi;
		recordNum=pinfo.total;
		buildTableBody(pinfo);
		buildPageInfo(pinfo);
		buildNavPage(pinfo);
	})
}
function buildTableBody(pinfo){
	$(".empdata").empty();
	$.each(pinfo.list, function(index, emp) {
		var editBtn=$("<button></button>").addClass("btn-primary btn-xs editbtn")
		.append($("<span><span>").addClass("glyphicon glyphicon-pencil"))
		.append("修改");
		var delBtn=$("<button></button>").addClass("btn-danger btn-xs delbtn")
		.append($("<span><span>").addClass("glyphicon glyphicon-minus"))
		.append("删除");
		delBtn.click(function(){
			if(confirm("您确定要删除吗？")){
				
				$.ajax({
					url:"emp/"+emp.empno,
					type:"POST",
					data:{_method:'DELETE'},
					success:function(data){
						if(data.status){
							toPage(pinfo.pageNum);
						}else{
							alert(data.message);
						}
					}
				});
			}
			/*$.post("delemp",{empno:emp.empno},function(data){
				if(data.status){
					alert(data.message);
					toPage(pinfo.pageNum);
				}else{
					alert(data.message);
				}
			});*/
		});
		$("<tr></tr>")
		.append($("<td></td>").append(emp.empno))
		.append($("<td></td>").append(emp.ename))
		.append($("<td></td>").append(emp.deptno))
		.append($("<td></td>").append(emp.mgr))
		.append($("<td></td>").append(emp.dutyno))
		.append($("<td></td>").append(emp.hiredate))
		.append($("<td></td>").append(emp.sal))
		.append($("<td></td>").append(editBtn).append(delBtn))
		.appendTo($(".empdata"));	
	});	
	/*$("tbody").on("click",".btn-xs",function(){
		var empno=$(this).parents('tr').find('td:eq(0)').text();
		$.post("delemp",{empno:empno},function(data){
			if(data.status){
				alert(data.message);
				toPage(pinfo.pageNum);
			}else{
				alert(data.message);
			}
		});
	});*/
}


function buildPageInfo(pinfo){
	$("#pageinfo").empty();
	var spantotal=$("<span></span>").addClass("bg-info").text(pinfo.total);
	var spanpages=$("<span></span>").addClass("bg-info").text(pinfo.pages);
	var curpage=$("<span></span>").addClass("bg-info").text(pinfo.pageNum);
	$("#pageinfo").append("记录总数为：").append(spantotal)
	.append("     总页数：").append(spanpages).append(" 当前页为：").append(curpage);
	
}

function buildNavPage(pinfo){
	var ultag=$("<ul></ul>").addClass("pagination pull-right").attr("style","margin:0px auto;");
	var firstLi=$("<li></li>").append($("<a></a>").attr("href","#").text("首页"));
	var prevLi=$("<li></li>").append($("<a></a>").attr("href","#").text("上页"));
	if(pinfo.pageNum==1){
		firstLi.addClass("disabled");
		prevLi.addClass("disabled");
	}else{
		firstLi.click(function(){
			toPage(1);
		});
		prevLi.click(function(){
			toPage(pinfo.pageNum-1);
		});
	}
	
	ultag.append(firstLi).append(prevLi);
	$.each(pinfo.navigatepageNums, function(index, elt) {
		var eachLi=$("<li></li>").append($("<a></a>").attr("href","#").text(elt));
		eachLi.click(function(){
			toPage(elt);
		});
		if(pinfo.pageNum==elt){
			eachLi.addClass("active");
		}
		ultag.append(eachLi);
	})
	
	
	var nextLi=$("<li></li>").append($("<a></a>").attr("href","#").text("下页"));
	var lastLi=$("<li></li>").append($("<a></a>").attr("href","#").text("末页"));
	if(pinfo.pageNum==pinfo.pages){
		nextLi.addClass("disabled");
		lastLi.addClass("disabled");
	}else{
		lastLi.click(function(){
			toPage(pinfo.pages);
		});
		nextLi.click(function(){
			toPage(pinfo.pageNum+1);
		});
	}
	ultag.append(nextLi).append(lastLi);
	$("#pageNav").empty();
	ultag.appendTo($("#pageNav"));
}

$('#btnAdd').click(function(){	
	$('#myModal').modal({
		backdrop: 'static'
	});
	$('#myModal form')[0].reset();
});
$(".empdata").on("click",".editbtn",function(){
	editflag=true;
	$("#myModal .modal-title").text("修改员工");
	var empno=$(this).parents("tr").find("td:eq(0)").text();	
	setupData(empno);
	$('#myModal').modal({
		backdrop: 'static'
	});
	
	
});
function setupData(empno){
	$.get("emp/"+empno,function(data){
		var jsonemp=data.extend.emp;
		var allduty=data.extend.allduty;
		$("#dutyno").empty();
		$("#dutyno").append($("<option selected></option>").attr("value","0").text("请选择"));
		$.each(allduty, function(i, elt) {
			$("#dutyno").append($("<option></option>").val(elt.dutyno).text(elt.dutyname));
		});
		if(jsonemp.mgr!=null&&jsonemp.dutyno!=3){
			$("#dutyno option[value=3]").remove();
		}
		$("#myModal input[name='ename']").val(jsonemp.ename);
		$("#myModal select[name='deptno']").val([jsonemp.deptno]);
		$("#myModal input[name='mgr']").val(jsonemp.mgr);	
		$("#myModal .mgrname").text(data.extend.mgrname);
		$("#myModal select[name='dutyno']").val([jsonemp.dutyno]);
		$("#myModal input[name='hiredate']").val(jsonemp.hiredate);
		$("#myModal input[name='sal']").val(jsonemp.sal);
	});
}
var ceono,ceoname;

	$("#deptno").empty();
	$("#deptno").append($("<option selected></option>").attr("value","0").text("请选择"));
	$.get("getdept",function(data){
		if(data.status){
			$.each(data.extend.dplist, function(i, elt) {
				$("#deptno").append($("<option></option>").attr("value",elt.deptno).text(elt.dname));
			});
			/*$("#myModal input[name='mgr']").val(data.extend.ceo.empno);
			$("#myModal .mgrname").text(data.extend.ceo.ename);*/
			ceono=data.extend.ceo.empno;
			ceoname=data.extend.ceo.ename;
		}else{
			alert(data.message);
		}			
	});

/*function setupDuty(){
		$("#dutyno").empty();
		$("#dutyno").append($("<option selected></option>").attr("value","0").text("请选择"));
		$.get("getduty",function(data){
			if(data.status){
				$.each(data.extend.dtlist, function(i, elt) {
					$("#dutyno").append($("<option></option>").attr("value",elt.dutyno).text(elt.dutyname));
				})
			}else{
				alert(data.message);
			}			
		});	
}*/
$("select#deptno").change(function(){
	var currdept=$("select#deptno option:selected").val();
	var aaa=false;
	$.get("getdeptmgr/"+currdept,function(data){
		if(data.extend.mgr!=null){
			$("#myModal input[name='mgr']").val(data.extend.mgr.empno);
			$("#myModal .mgrname").text(data.extend.mgr.ename);	
			aaa=true;
		}else{
			$("#myModal input[name='mgr']").val('');
			$("#myModal .mgrname").text("此部门没有设置经理");	
			aaa=false;
		}
		$("#dutyno").empty();
		$("#dutyno").append($("<option selected></option>").attr("value","0").text("请选择"));
		$.each(data.extend.dtlist, function(i, elt) {
			if(aaa&&elt.dutyno==3){
				return true;
				//$("#dutyno").append($("<option disabled></option>").attr("value",elt.dutyno).text(elt.dutyname));
			}else if(elt.dutyno==5){
				return true;
			}else{
				$("#dutyno").append($("<option></option>").attr("value",elt.dutyno).text(elt.dutyname));
			}
	
		});	
	});
	//$("#myModal input[name='mgr']").val($("select#deptno option:selected").text());
});


$("select#dutyno").change(function(){
	var currdept=$("select#dutyno option:selected").val();	
	if(currdept=='3'){
		$("#myModal input[name='mgr']").val(ceono);
		$("#myModal .mgrname").text(ceoname);	
	}
});

$("#myModal #btnEmpSave").click(function(){
	$.ajax({
		type:"POST",
		url:"emp",
		data:$("#myModal form").serialize(),
		success:function(data){
			$("#myModal").modal('hide');
			toPage(recordNum);			
		}
	});
});
	
@Controller
public class EmpController {
	@Resource
	EmpService empService;
	@Resource
	private DeptService deptService;
	@Resource
	private DutyService dutyService;
	@RequestMapping("index")
	public String index(Model model) {
		List<Emp> emps = empService.getAllEmps();
		model.addAttribute("emps",emps);
		return "WEB-INF/views/list";
	}
	
	@ResponseBody
	@RequestMapping("emps")
	public Msg getEmps(@RequestParam(value="pn",defaultValue="1") Integer pn) {
		PageHelper.startPage(pn,7);
		List<Emp> emps = empService.getAllEmps();
		PageInfo pageInfo = new PageInfo(emps,5);
		return Msg.success().add("pi",pageInfo);
	}
	@ResponseBody
	@RequestMapping(value="emp/{empno}",method=RequestMethod.GET)
	public Msg getOneEmp(@PathVariable(value="empno")short empno) {
		String mgrname;
		Emp emp=empService.getOneEmp(empno);
		List<Duty> allDuty = dutyService.getAllDuty();
		if(emp.getMgr()!=null) {
			Emp mgr=empService.getOneEmp(emp.getMgr());
			mgrname=mgr.getEname();
		}else {
			mgrname=null;
		}
			
		return Msg.success().add("emp", emp).add("allduty", allDuty).add("mgrname", mgrname);
	}
	
	@ResponseBody
	@RequestMapping(value="emp/{empno}",method=RequestMethod.DELETE)
	public Msg delEmp(@PathVariable(value="empno") short empno) {
		if(empService.delEmp(empno)==1) {
			return Msg.success();
		}else {
			return Msg.fail();
		}
	}
	
	@ResponseBody
	@RequestMapping("getdept")
	public Msg getDept() {
		boolean flag=false;
		List<Dept> deptlist=deptService.getAllDept();
		Emp ceo=empService.getCEO();
		return Msg.success().add("dplist", deptlist).add("ceo", ceo);
		
	}
	/*@ResponseBody
	@RequestMapping("getduty")
	public Msg getDuty() {
		boolean flag=false;		
		List<Duty> dutylist=dutyService.getAllDuty();	
		if(dutylist!=null) {
			return Msg.success().add("dtlist", dutylist);
		}else {
			return Msg.fail();
			
		}
	}*/
	@ResponseBody
	@RequestMapping("getdeptmgr/{deptno}")
	public Msg getDeptMgr(@PathVariable(value="deptno") short deptno) {
		Emp emp = empService.getDeptMgr(deptno);
		
		List<Duty> dutylist=dutyService.getAllDuty();
		return Msg.success().add("mgr", emp).add("dtlist", dutylist);
	}
	
	@ResponseBody
	@RequestMapping(value="emp",method=RequestMethod.POST)
	public Msg saveEmp(Emp emp) {
		if(1==empService.addEmp(emp)) {
			
			return Msg.success();
		}else {
			return Msg.fail();
		}
	}
}	

mybatis:
问题1、如何注解方式获得插入新数据的主键
问题2、<mybatis:>命名空间的作用。书中用了这个命名空间后，没有发现mybatis-config.xml的配置体现。
问题3、网上说复杂的SQL语句需要XML配置，但我的理解为什么是注解更好（嵌套SQL语句）。
热门图书：
String sql = " select /*+ result_cache */ a.marc_rec_no, a.m_title, a.m_author, a.m_publisher, a.m_pub_year,  a.m_call_no ,s.read_count  from  marc@dblink_libsys a ,  (select * from (select r.marc_rec_no, r.read_count, row_number () OVER (ORDER BY r.read_count DESC) RANK  from reader_score@dblink_libsys r , (SELECT distinct marc_rec_no FROM marc_idx@dblink_libsys  WHERE  marc_idx_grp = '07') t where r.marc_rec_no = t.marc_rec_no ) where rank <= 100 ) s  where a.marc_rec_no = s.marc_rec_no order by read_count desc";

热门借阅：
String sql=" select * from (select  b.m_title,b.m_author,b.m_publisher,b.m_call_no ,b.m_pub_year, b.lend_count,b.item_count,(count(i.book_lend_flag) - sum(translate(book_lend_flag, 23, 11))) as in_loca  from book_rank@dblink_libsys b,item@dblink_libsys i  where b.m_call_no=i.call_no  group by b.m_title,b.m_author,b.m_publisher,b.m_call_no ,b.m_pub_year, b.lend_count,b.item_count order by lend_count desc) where rownum<=100";
检索：
strtype="书名";
							sql="select a.location_name, count(a.location_name) as lend,(count(a.book_lend_flag) - sum(translate(book_lend_flag, 23, 11))) as in_loca,a.call_no,a.m_title,a.m_isbn,a.m_author,a.m_publisher,a.m_pub_year,a.price from itemmarc@dblink_libsys a, call_no_lst@dblink_libsys c  where a.call_no=c.call_no and upper(a.m_title) like '%"+skeyword+ "%'  group by a.location_name, a.call_no,a.m_title,a.m_isbn,a.m_author,a.m_publisher,a.m_pub_year,a.price order by a.m_pub_year desc";

select c.* ,m.book_place from (select a.m_title,a.m_author,a.m_publisher,a.m_pub_year,b.prop_no,b.call_no,b.book_lend_flag,b.book_stat_code from marc@dblink_libsys a ,
(select i.marc_rec_no,i.prop_no,i.book_lend_flag,i.book_stat_code,i.call_no from item@dblink_libsys i where i.call_no in  (select distinct book_index from m_transform_tag where book_place like 'F020510103')) b 
where a.marc_rec_no=b.marc_rec_no) c left join m_transform_tag m on c.prop_no=m.book_id order by c.call_no








