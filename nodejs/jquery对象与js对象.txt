jQuery对象即是用jQuery类库的选择器获得的对象;
jQuery对象就是通过jQuery包装DOM对象后产生的对象，它是jQuery独有的。
在jQuery对象中无法使用DOM对象的任何方法。
jquery对象就是一个数组对象，在用each（jQuery）或forEach(js)遍历时，内部是js node结点，如果要用jQuery对象方法，需要$(x)转换一下。

找子元素或后代元素
js:
$0.querySelector('h3') //一个
$0.querySelectorAll('h3') //多个

jQuery:
children方法返回子对象数组，不包含后代对象
find方法可以找出所有的后代对象
这两个方法返回的都是jQuery对象。

关于$和$$
$0是js结点：$0.querySelectorAll('li').forEach(x=>log(x.innerText))
$($0)是jQuery对象：$($0).find('li').each((i,e)=>log(e.innerText))
$('.ulist li')是jQuery数组对象
$$('.ulist li')是js数组对象，相当于Array.from(document.querySelectorAll('.ulist li'))

关于数组遍历：
js：forEach方法：$$('.ulist li').forEach((ele,i)=>{console.log(ele,i)})
jQuery:each方法 $('.ulist li').each((i,ele)=>console.log(i,ele))

数组的处理：map filter sort
处理数组项并返回一个数组：map方法
js:$$('.catListTag li a').map(x=>x.href)
	 $$('.catListTag li a').map((e,i)=>new Object({'No':i,'href':e.href}))
jQuery:$('.catListTag li a').map((i,x)=>x.innerText)

过滤数组项：filter方法
js：$$('.catListTag li a').filter((ele,i)=>ele.href.test(/aa/)||ele.href)
jQuery: 
$('.catListTag li a').filter((i,e)=>/[^css]/.test(e.innerText)).map((i,e)=>e.innerText) //以css开头
$('.catListTag li a').filter((i,e)=>/^（?!css）/.test(e.innerText)).map((i,e)=>e.innerText) //不以css开头

正则运用：
包含admin且不包含abc。
^((?!abc).)*admin((?!abc).)*$
(?!abc) 的意思是 ， 不匹配abc
((?!abc).)*  的意思就是匹配不含abc的字符(?!abc)跟任意字符. 的组合，出现任何次* 
((?!abc).)* 的结果就是 匹配了不包含abc的字符串
加上首尾  ^((?!abc).)*$ 表示匹配一行
包含admin且不包含abc
^((?!abc).)*admin((?!abc).)*$