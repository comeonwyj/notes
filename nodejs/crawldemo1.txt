const request=require('request') 
const iconv=require('iconv-lite') 
const cheerio=require('cheerio') 
const fs=require('fs') 
const async=require('async') 
var URL='https://www.81zw.com/book/43543/'; 
var NUMBER=0; 
var start=new Date(); 
console.log('starting crawl HomePage...') 
var options={
   method:'GET',
    encoding:null,
    url:URL,
  timeout:100000 };
  request(options,function (err,res,body) { if(err){ console.log('Crawl
HomePage failed') console.log(err) return ; } console.log('crawl HomePage
successful,times'+ (new Date()-start)/1000+'seconds')
body=iconv.decode(body,'utf-8') var $=cheerio.load(body) var MAXLIMIT=5; var
TITLE=$('#info h1').text()+'.txt' var urls=$('#list>dl>dd>a');
 var urls=[]
  urls.each(function(index,ele){
    var a=$(ele)
    var url=url.substring(0,20)+a.attr('href')
    var data={
      'index':index,
      'url':url,
      'title':a.text()
    }
    urls.push(data);
  })
  async.mapLimit(URLS,MAXLIMIT, function (item,callback) {
    var start=new Date();
    options.url=item.url;
    request(options,(err,res,body)=>{
      var end= (new Date()-start)/1000;
      var str;
      if(err){
        var str=`get ${item.url} failed,times used ${end} seconds\n\r`
        callback(null,{
          'index':-1,
          'title':'error',
          'content':'error'
        });
        fs.writeFile('error.txt',str,{'flag':'a+','encoding':'utf-8'},err=>{
          if(err){
            console.log(err)
          }
        })
      }else{
        body=iconv.decode(body,'utf-8')
        var $=cheerio.load(body)
        var content=$('#content').text();
        var str=`get ${item.url} successful,times used ${end} seconds\n\r`
        var data={
          'index':item.index,
          'title':item.title,
          'content':content
        }
        
        callback(null,data);
        fs.writeFile('success.txt',str,{'flag':'a+','encoding':'utf-8'},err=>{
          if(err){
            console.log(err)
          }
        })
        NUMBER++;
        console.log(`getting ${NUMBER} item`)
      }
    })
  },
  function (err,result) {
    var end= (new Date()-start)/1000;
    console.log(`crwal all chapter using times ${end} seconds`)
    result.sort((a,b)=>a.index-b.index)
    result=result.map(item=>item.title+'\n\r'+item.content).join('\n\r')
    var s=new Date();
    console.log(`begin write to file ${TITLE}.txt`)
    fs.writeFileSync(TITLE,result,'utf-8')
    var e=(new Date() - s)/1000;
    console.log(`write file end,times used is ${e} seconds`)
    var end= (new Date()-start)/1000;
    console.log(`Total time used is ${end}`)
  })
})
    "vim